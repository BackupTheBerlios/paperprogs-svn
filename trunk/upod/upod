#!/usr/bin/perl 
 use IO::Socket;
 use Net::hostent;
 do "upod.conf";
 print "This is the Universal Port Opening Daemon\n";
 print "-----------------------------------------\n";
 if ($ARGV[0] eq "") { help(); };				# Redirect to help
 our $nmap = 0;
 if ($ARGV[1] eq '--nmap') { $nmap = "1" };
 if ($ARGV[1] eq '--nmaphold') { $nmap = "2" };

 $PORT = $ARGV[0];                  				# Take command line arg for port

 $server = IO::Socket::INET->new( Proto     => 'tcp',		#init the server
                                  LocalPort => $PORT,
                                  Listen    => SOMAXCONN,
                                  Reuse     => 1);

 die "Can't setup server" unless $server;
 print "[Port $PORT accepting clients!]\n";
 our $num;
 while ($client = $server->accept()) {
   our $mrh;
   our $curip;
   our $hostinfo;
   if ($file ne "") { open LOG, ">>$file" or die $!; };			#open out.log: the log file
   $client->autoflush(1);
   $hostinfo = gethostbyaddr($client->peeraddr);		#set host info
   die "A name resolution failed!" unless $hostinfo->addr;	#used to be a freakish bug, haven't had the problem recently
   $curip = inet_ntoa($hostinfo->addr);
   if (($file ne "") && ($mrh ne $curip)) { print LOG $curip, "\n"; };
   if ($mrh ne $curip) { $num++;};
   if (($mrh ne $curip) && ($nmap == "1" )) { system("nmap $curip &"); };
   if (($mrh ne $curip) && ($nmap == "2" )) { system("nmap $curip"); };
   printf "[Connection $num from %s]\n", inet_ntoa($hostinfo->addr);
   print $client "Welcome, Now get out! You're Visiter $num\n";  
   close $client;
   $mrh = inet_ntoa($hostinfo->addr);				#$mrh = most recent host
 }

sub help {							#help sub
	print "upod v.CVS\n";
	print "syntax: upod [port]\n";
	print "For more help see the man page or web site\n";
	exit;
};
